name: Rust Build & Release

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Cache Cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: rust-windows-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          rust-windows-

    - name: Install Rust (stable)
      uses: dtolnay/rust-toolchain@stable

    - name: Build Project (Windows)
      run: cargo build --release --verbose

    - name: Rename Output to MyHeroPak.exe
      run: |
        mkdir -p dist
        cp target/release/MyHeroPak.exe dist/MyHeroPak.exe

    - name: Upload Windows Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: MyHeroPak_Windows
        path: dist/MyHeroPak.exe

  build-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Cache Cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: rust-linux-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          rust-linux-

    - name: Install Rust (stable)
      uses: dtolnay/rust-toolchain@stable

    - name: Build Project (Linux)
      run: cargo build --release --verbose

    - name: Rename Output to MyHeroPak_Unix
      run: |
        mkdir -p dist
        cp target/release/MyHeroPak dist/MyHeroPak_Unix

    - name: Upload Linux Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: MyHeroPak_Linux
        path: dist/MyHeroPak_Unix

  release:
    needs:
      - build-windows
      - build-linux
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Download Windows Build Artifact
      uses: actions/download-artifact@v4
      with:
        name: MyHeroPak_Windows
        path: dist/

    - name: Download Linux Build Artifact
      uses: actions/download-artifact@v4
      with:
        name: MyHeroPak_Linux
        path: dist/

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          dist/MyHeroPak.exe
          dist/MyHeroPak_Unix
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASETOKEN }}
